[{"C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\Nav.jsx":"3","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\Game.jsx":"4","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\Games.jsx":"5","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\GamesCard.jsx":"6","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\SearchGameBar.jsx":"7","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\SearchPriceBar.jsx":"8","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\SearchCatBar.jsx":"9","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\SearchPlatformBar.jsx":"10","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\RegistrationForm.jsx":"11","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\LoginForm.jsx":"12","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\AddGame.jsx":"13","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\CatDropdown.jsx":"14","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\PlatformDropdown.jsx":"15","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\AddCat.jsx":"16"},{"size":449,"mtime":1612668237881,"results":"17","hashOfConfig":"18"},{"size":899,"mtime":1612668189105,"results":"19","hashOfConfig":"18"},{"size":2072,"mtime":1612668312565,"results":"20","hashOfConfig":"18"},{"size":5155,"mtime":1612670105324,"results":"21","hashOfConfig":"18"},{"size":3878,"mtime":1612668540428,"results":"22","hashOfConfig":"18"},{"size":774,"mtime":1612668231353,"results":"23","hashOfConfig":"18"},{"size":664,"mtime":1612668337616,"results":"24","hashOfConfig":"18"},{"size":619,"mtime":1612668351328,"results":"25","hashOfConfig":"18"},{"size":1189,"mtime":1612668332207,"results":"26","hashOfConfig":"18"},{"size":1485,"mtime":1612668342963,"results":"27","hashOfConfig":"18"},{"size":4588,"mtime":1612668396543,"results":"28","hashOfConfig":"18"},{"size":4155,"mtime":1612668270800,"results":"29","hashOfConfig":"18"},{"size":5484,"mtime":1612708345607,"results":"30","hashOfConfig":"18"},{"size":483,"mtime":1612668194113,"results":"31","hashOfConfig":"18"},{"size":785,"mtime":1612668321501,"results":"32","hashOfConfig":"18"},{"size":2663,"mtime":1612708359761,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"72ty0s",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\index.js",[],["72","73"],"C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\App.js",[],"C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\Nav.jsx",["74"],"//Name: Devyn Chew Kim Hong\r\n//Class: DAAA/1B/04\r\n//Admission number: P2026578\r\n\r\nimport React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\nconst Navigation = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const loggedInUserID = parseInt(localStorage.getItem(\"loggedInUserID\"));\r\n    const loggedInUserName = localStorage.getItem(\"loggedInUserName\");\r\n    const loggedInRole = localStorage.getItem(\"loggedInRole\");\r\n\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"loggedInUserID\");\r\n        localStorage.removeItem(\"loggedInUserName\");\r\n        localStorage.removeItem(\"loggedInRole\");\r\n    }\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n            <Navbar.Brand>SP Games</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"/\">Games</Nav.Link>\r\n                    {loggedInRole == \"admin\" ? (\r\n                        <>\r\n                            <Nav.Link href=\"/addgame\">Add game</Nav.Link>\r\n                            <Nav.Link href=\"/addcategory\">Add category</Nav.Link>\r\n                        </>\r\n                    ) : (\r\n                            <></>\r\n                        )}\r\n                </Nav>\r\n                {token === null || isNaN(loggedInUserID) ? (\r\n                    <Nav>\r\n                        <Nav.Link href=\"/login\">Log in</Nav.Link>\r\n                        <Nav.Link href=\"/register\">Register</Nav.Link>\r\n                    </Nav>\r\n                ) : (\r\n                        <Nav>\r\n\r\n                            <Nav.Link >Welcome back, {loggedInUserName}</Nav.Link>\r\n                            <Nav.Link href=\"/\" onClick={logout}>Log Out</Nav.Link>\r\n                        </Nav>\r\n                    )}\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\nexport default Navigation;","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\Game.jsx",["75"],"//Name: Devyn Chew Kim Hong\r\n//Class: DAAA/1B/04\r\n//Admission number: P2026578\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Image, Card, ListGroup, Form, Button } from \"react-bootstrap\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport Navigation from \"./Nav\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Game = () => {\r\n  //get gameid\r\n  const { id } = useParams();\r\n  const [gameDetails, setGameDetails] = useState();\r\n  const [catDetails, setCatDetails] = useState();\r\n  const [reviewDetails, setReviewDetails] = useState();\r\n  const [ratingDetails, setRatingDetails] = useState(0);\r\n  let history = useHistory();\r\n\r\n  const [state, setState] = useState({\r\n    rating: 1,\r\n    content: \"\"\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    //Get game by gameid\r\n    axios\r\n      .get(`http://localhost:8081/api/game/${id}`)\r\n      .then((res) => {\r\n        const gameData = res.data[0];\r\n        setGameDetails(gameData);\r\n      });\r\n\r\n    //Get category by catid\r\n    async function getCategory() {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8081/api/game/${id}`);\r\n        let catid = response.data[0].catid;\r\n        axios\r\n          .get(`http://localhost:8081/api/category/${catid}`)\r\n          .then((res) => {\r\n            const catData = res.data[0];\r\n            setCatDetails(catData);\r\n          });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    //Get review by gameid\r\n    axios\r\n      .get(`http://localhost:8081/game/${id}/review`)\r\n      .then((res) => {\r\n        const reviewData = res.data;\r\n        setReviewDetails(reviewData);\r\n        let rating = 0;\r\n        for (let i = 0; i < reviewData.length; i++) {\r\n          rating = rating + reviewData[i].rating;\r\n        }\r\n        let avgRating = rating / reviewData.length;\r\n        setRatingDetails(avgRating.toFixed(1));\r\n      });\r\n\r\n    getCategory();\r\n\r\n\r\n  }, []);\r\n\r\n  //Destructure fields from objects\r\n  const { title, description, price, platform, year, images } = gameDetails || {};\r\n  const { catname } = catDetails || {};\r\n\r\n  const review = () => {\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    const loggedInUserID = parseInt(localStorage.getItem(\"loggedInUserID\"));\r\n\r\n    if (token === null || isNaN(loggedInUserID)) { //if user is not logged in\r\n      console.log(\"You need to log in!\");\r\n    }\r\n    else { //else submit review\r\n      axios\r\n        .post(`http://localhost:8081/user/${loggedInUserID}/game/${id}/review/`, state, {\r\n          headers: {\r\n              \"Authorization\": \"Bearer \" + token\r\n          }\r\n      })\r\n        .then((res) => {\r\n          history.push(`/game/${id}`);\r\n        });\r\n      console.log(\"Review submitted!\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      {gameDetails && catDetails && reviewDetails ? (\r\n        <div className=\"pt-5\">\r\n\r\n          <Image variant=\"top\" src={images} className=\"w-50 img-fluid mx-auto pb-5\" />\r\n          <h2> {`Title: ${title}`} </h2>\r\n          <h2> {`Platform: ${platform}`} </h2>\r\n          <h2> {`Category: ${catname}`} </h2>\r\n          <h2> {`Description: ${description}`} </h2>\r\n          <h2> {`Price: $${price}`} </h2>\r\n          <h2> {`Published Year: ${year}`} </h2>\r\n          <h2> {`Average rating: ${ratingDetails}/10`} </h2>\r\n\r\n          <Card className=\"w-75 mx-auto my-5\" bg=\"info\">\r\n            <Card.Header>Reviews</Card.Header>\r\n            <ListGroup variant=\"flush\">\r\n              {reviewDetails.map((review) => (\r\n                <ListGroup.Item>{review.content} <br></br> {review.rating}/10 <br></br>By: {review.username} </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n\r\n          </Card>\r\n\r\n          <Form className=\"w-75 mx-auto mb-5\">\r\n            <Form.Group className=\"w-25 mx-auto\" >\r\n              <Form.Label>Rating (out of 10)</Form.Label>\r\n              <Form.Control as=\"select\"\r\n                id=\"rating\"\r\n                onChange={handleChange}\r\n                value={state.rating}\r\n              >\r\n                <option>1</option>\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>4</option>\r\n                <option>5</option>\r\n                <option>6</option>\r\n                <option>7</option>\r\n                <option>8</option>\r\n                <option>9</option>\r\n                <option>10</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Leave a review</Form.Label>\r\n              <Form.Control as=\"textarea\" rows={3} id=\"content\" value={state.content}\r\n                onChange={handleChange} />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"dark\" type=\"submit\" onClick={review}>Submit</Button>\r\n\r\n          </Form>\r\n        </div>\r\n      ) : (\r\n          <CircularProgress />\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\Games.jsx",["76","77","78","79"],"//Name: Devyn Chew Kim Hong\r\n//Class: DAAA/1B/04\r\n//Admission number: P2026578\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport GamesCard from \"./GamesCard\";\r\nimport SearchGameBar from \"./SearchGameBar\";\r\nimport SearchPriceBar from \"./SearchPriceBar\";\r\nimport SearchCatBar from \"./SearchCatBar\";\r\nimport SearchPlatformBar from \"./SearchPlatformBar\";\r\nimport Navigation from \"./Nav\";\r\n\r\nconst Games = () => {\r\n  const [games, setGames] = useState();\r\n  const [categories, setCategories] = useState();\r\n  const [inputGame, setGame] = useState('');\r\n  const [filteredGames, setFilteredGames] = useState();\r\n  const [inputPrice, setPrice] = useState();\r\n  const [inputCat, setCat] = useState('');\r\n  const [inputPlatform, setPlatform] = useState('');\r\n\r\n  useEffect(() => {\r\n    //Get all games\r\n    axios.get(`http://localhost:8081/api/games`).then((res) => {\r\n      const gamesObject = res.data;\r\n      setGames(gamesObject);\r\n      setFilteredGames(gamesObject);\r\n    });\r\n\r\n    //Get all categories\r\n    axios.get(`http://localhost:8081/api/category`).then((res) => {\r\n      const categoryObject = res.data;\r\n      setCategories(categoryObject);\r\n    });\r\n\r\n  }, []);\r\n\r\n  //Function to filter games by title\r\n  const filterGame = (inputGame) => {\r\n    const filtered = games.filter(game => {\r\n      return game.title.toLowerCase().includes(inputGame.toLowerCase())\r\n    })\r\n    console.log(inputGame);\r\n    setGame(inputGame);\r\n    setFilteredGames(filtered);\r\n    console.log(filteredGames);\r\n  }\r\n\r\n  //Function to filter games by max price\r\n  const filterPrice = (inputPrice) => {\r\n\r\n    let filtered = [];\r\n\r\n    for (let i = 0; i < games.length; i++) {\r\n      let game = games[i];\r\n      if (inputPrice === \"\") {\r\n        filtered = games;\r\n        console.log(filtered);\r\n      } else if (game.price <= inputPrice) {\r\n        filtered.push(game);\r\n      }\r\n    }\r\n    setPrice(inputPrice);\r\n    setFilteredGames(filtered);\r\n  }\r\n\r\n  //Function to filter games by category selected\r\n  const filterCat = (inputCat) => {\r\n    //if user selects 'All', show all games.\r\n    if (inputCat == 'All') {\r\n      setCat(inputCat);\r\n      setFilteredGames(games);\r\n    } else { //else show only games under the selected category\r\n      const filtered = games.filter(game => {\r\n        return game.catid == inputCat;\r\n      })\r\n      setCat(inputCat);\r\n      setFilteredGames(filtered);\r\n    }\r\n  }\r\n\r\n  //Function to filter games by platform\r\n  const filterPlatform = (inputPlatform) => {\r\n    //if user selects 'All', show all games.\r\n    if (inputPlatform == 'All') {\r\n      setPlatform(inputPlatform);\r\n      setFilteredGames(games);\r\n    } else { //else show only games by selected platform\r\n      const filtered = games.filter(game => {\r\n        return game.platform == inputPlatform;\r\n      })\r\n      setPlatform(inputPlatform);\r\n      setFilteredGames(filtered);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      {filteredGames && categories && games ? (\r\n        <>\r\n          <Row className=\"mx-auto\">\r\n            <SearchGameBar input={inputGame} onChange={filterGame} />\r\n            <SearchPriceBar input={inputPrice} onChange={filterPrice} />\r\n          </Row>\r\n\r\n          <Row className=\"pt-5\">\r\n            <SearchCatBar input={inputCat} onChange={filterCat} data={categories} />\r\n            <SearchPlatformBar input={inputPlatform} onChange={filterPlatform} data={games} />\r\n          </Row>\r\n\r\n          <Row className=\"mx-auto justify-content-center pt-5\">\r\n\r\n            {filteredGames.map((game) => (\r\n              <GamesCard key={game.gameid} game={game} />\r\n            ))}\r\n          </Row>\r\n        </>\r\n      ) : (\r\n          <CircularProgress />\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Games;\r\n","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\GamesCard.jsx",[],"C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\SearchGameBar.jsx",[],"C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\SearchPriceBar.jsx",[],"C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\SearchCatBar.jsx",[],"C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\SearchPlatformBar.jsx",[],"C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\RegistrationForm.jsx",["80","81"],"//Name: Devyn Chew Kim Hong\r\n//Class: DAAA/1B/04\r\n//Admission number: P2026578\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport Navigation from \"./Nav\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction RegistrationForm() {\r\n    let history = useHistory();\r\n\r\n    const [state, setState] = useState({\r\n        email: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n    })\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n\r\n    const handleSubmitClick = (e) => {\r\n        e.preventDefault();\r\n        if (state.password == state.confirmPassword) {\r\n            sendDetailsToServer()\r\n        } else {\r\n            console.log('Passwords do not match');\r\n        }\r\n    }\r\n\r\n    const redirectToLogin = () => {\r\n        history.push('/login');\r\n    }\r\n\r\n\r\n    const sendDetailsToServer = () => {\r\n        const baseUrl = \"http://localhost:8081\";\r\n\r\n        if (state.email.length && state.password.length) {\r\n            const payload = {\r\n                \"email\": state.email,\r\n                \"username\": state.username,\r\n                \"password\": state.password,\r\n            }\r\n            axios.post(baseUrl + '/api/user', payload)\r\n                .then(function (response) {\r\n                    if (response.status == 200) {\r\n                        redirectToLogin();\r\n                    } else {\r\n                        console.log(\"Some error ocurred\");\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        } else {\r\n            console.log('Please enter valid username and password')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navigation />\r\n            <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center mx-auto pt-4\">\r\n                <form>\r\n                    <div className=\"form-group text-left\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                        <input type=\"email\"\r\n                            className=\"form-control\"\r\n                            id=\"email\"\r\n                            aria-describedby=\"emailHelp\"\r\n                            placeholder=\"Enter email\"\r\n                            value={state.email}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                    </div>\r\n                    <div className=\"form-group text-left\">\r\n                        <label htmlFor=\"exampleInputUsername1\">Username</label>\r\n                        <input type=\"username\"\r\n                            className=\"form-control\"\r\n                            id=\"username\"\r\n                            placeholder=\"Enter username\"\r\n                            value={state.username}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group text-left\">\r\n                        <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                        <input type=\"password\"\r\n                            className=\"form-control\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={state.password}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group text-left\">\r\n                        <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\r\n                        <input type=\"password\"\r\n                            className=\"form-control\"\r\n                            id=\"confirmPassword\"\r\n                            placeholder=\"Confirm Password\"\r\n                            value={state.confirmPassword}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary mb-5\"\r\n                        onClick={handleSubmitClick}\r\n                    >\r\n                        Register\r\n                </button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegistrationForm;","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\LoginForm.jsx",["82"],"//Name: Devyn Chew Kim Hong\r\n//Class: DAAA/1B/04\r\n//Admission number: P2026578\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './LoginForm.css';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Navigation from \"./Nav\";\r\n\r\n\r\nfunction LoginForm(props) {\r\n    const [state, setState] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target        \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n\r\n    //Function when the login button is clicked\r\n    const handleSubmitClick = (e) => {\r\n        e.preventDefault();\r\n\r\n        const baseUrl = \"http://localhost:8081\";\r\n\r\n        const payload = {\r\n            \"email\": state.email,\r\n            \"password\": state.password,\r\n        }\r\n        axios.post(baseUrl + '/api/login', payload)\r\n            .then(function (response) {\r\n                if (response.status === 200) {\r\n                    const token = response.data.token;\r\n                    const loggedInUserID = response.data.UserData[0].userid;\r\n                    const loggedInUserName = response.data.UserData[0].username;\r\n                    const loggedInRole = response.data.UserData[0].role;\r\n                    localStorage.setItem(\"token\", token);\r\n                    localStorage.setItem(\"loggedInUserID\", loggedInUserID);\r\n                    localStorage.setItem(\"loggedInUserName\", loggedInUserName);\r\n                    localStorage.setItem(\"loggedInRole\", loggedInRole);\r\n                    redirectToHome();\r\n                }\r\n                else if (response.code === 204) {\r\n                    console.log(\"Username and password do not match\");\r\n                }\r\n                else {\r\n                    console.log(\"Username does not exists\");\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n    const redirectToHome = () => {\r\n        props.history.push('/');\r\n    }\r\n    const redirectToRegister = () => {\r\n        props.history.push('/register');\r\n    }\r\n    return (\r\n        <>\r\n            <Navigation />\r\n            <div className=\"card col-12 col-lg-4 login-card mt-5 hv-center mx-auto pt-3\">\r\n                <form>\r\n                    <div className=\"form-group text-left\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                        <input type=\"email\"\r\n                            className=\"form-control\"\r\n                            id=\"email\"\r\n                            aria-describedby=\"emailHelp\"\r\n                            placeholder=\"Enter email\"\r\n                            value={state.email}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                    </div>\r\n                    <div className=\"form-group text-left\">\r\n                        <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                        <input type=\"password\"\r\n                            className=\"form-control\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={state.password}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                    </div>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        onClick={handleSubmitClick}\r\n                    >Log in</button>\r\n                </form>\r\n                <div className=\"registerMessage\">\r\n                    <span>Dont have an account? </span>\r\n                    <a className=\"loginText\" onClick={() => redirectToRegister()}>Register</a>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForm);","C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\AddGame.jsx",[],"C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\CatDropdown.jsx",[],"C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\PlatformDropdown.jsx",[],"C:\\Users\\Admin\\Desktop\\BED CA2\\frontend\\src\\AddCat.jsx",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":29,"column":35,"nodeType":"89","messageId":"90","endLine":29,"endColumn":37},{"ruleId":"91","severity":1,"message":"92","line":77,"column":6,"nodeType":"93","endLine":77,"endColumn":8,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"88","line":73,"column":18,"nodeType":"89","messageId":"90","endLine":73,"endColumn":20},{"ruleId":"87","severity":1,"message":"88","line":78,"column":27,"nodeType":"89","messageId":"90","endLine":78,"endColumn":29},{"ruleId":"87","severity":1,"message":"88","line":88,"column":23,"nodeType":"89","messageId":"90","endLine":88,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":93,"column":30,"nodeType":"89","messageId":"90","endLine":93,"endColumn":32},{"ruleId":"87","severity":1,"message":"88","line":30,"column":28,"nodeType":"89","messageId":"90","endLine":30,"endColumn":30},{"ruleId":"87","severity":1,"message":"88","line":53,"column":41,"nodeType":"89","messageId":"90","endLine":53,"endColumn":43},{"ruleId":"95","severity":1,"message":"96","line":103,"column":21,"nodeType":"97","endLine":103,"endColumn":83},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["100"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [id]",{"range":"103","text":"104"},[2160,2162],"[id]"]